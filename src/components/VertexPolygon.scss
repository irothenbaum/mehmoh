@use '../styles/elements';
@use '../styles/constants';
@use '../styles/colors';
@use '../styles/layout';

$collapsedDimension: layout.$spaceNormal;

$opposite: calc(100% - var(--vertex-diameter));
$center: calc(100% - var(--vertex-diameter));
$opposite25: calc(75% - var(--vertex-radius));

.vertex-polygon {
  position: relative;
  max-width: calc(5 * var(--vertex-diameter));
  width: 100%;
  padding-top: 100%;

  animation: rotation2 constants.$growthTransition;

  .vertex {
    position: absolute;
    cursor: pointer;
  }

  /*
     0
  2    1
  */
  &.vp-count-3 {
    .vp-vertex-0 { top: 0; left: calc(50% - var(--vertex-radius)) }
    .vp-vertex-1 { top: $opposite; left: $opposite; }
    .vp-vertex-2 { top: $opposite; left: 0; }
  }

  /*
  0   1

  3   2
   */
  &.vp-count-4 {
    .vp-vertex-0 { top: 0; left: 0; }
    .vp-vertex-1 { top: 0; left: $opposite; }
    .vp-vertex-2 { top: $opposite; left: $opposite; }
    .vp-vertex-3 { top: $opposite; left: 0; }
  }

  /*
      0
   4     1
    3   2
   */
  &.vp-count-5 {
    .vp-vertex-0 { top: 0; left: calc(50% - var(--vertex-radius)); }
    .vp-vertex-1 { top: calc(45% - var(--vertex-radius)); left: $opposite; }
    .vp-vertex-2 { top: $opposite; right: $opposite25; }
    .vp-vertex-3 { top: $opposite; left: calc(25% - var(--vertex-radius)); }
    .vp-vertex-4 { top: calc(45% - var(--vertex-radius)); left: 0; }
  }

  /*
     0     1

  5          2

    4     3
   */
  &.vp-count-6, &.vp-count-7 {
    .vp-vertex-0 { top: 0; left: calc(25% - var(--vertex-radius)); }
    .vp-vertex-1 { top: 0; left: $opposite25; }
    .vp-vertex-2 { top: calc(50% - var(--vertex-radius)); left: $opposite; }
    .vp-vertex-3 { top: $opposite; left: $opposite25; }
    .vp-vertex-4 { top: $opposite; left: calc(25% - var(--vertex-radius)); }
    .vp-vertex-5 { top: calc(50% - var(--vertex-radius)); left: 0; }
    .vp-vertex-6 { top: calc(50% - var(--vertex-radius)); left: calc(50% - var(--vertex-radius)); }
  }

  &.collapsed {
    animation: rotation1 constants.$growthTransition;

    // all go to center when collapsed
   .vertex {
     top: calc(50% - #{$collapsedDimension / 2 });
     left: calc(50% - #{$collapsedDimension / 2 });
     height: $collapsedDimension;
     width: $collapsedDimension;
     box-shadow: none;
   }
  }
}

@keyframes rotation1 {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(180deg);
  }
}

@keyframes rotation2 {
  from {
    transform: rotate(180deg);
  }
  to {
    transform: rotate(359deg);
  }
}
