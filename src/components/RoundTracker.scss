@use '../styles/layout';
@use '../styles/constants';
@use '../styles/colors';
@use '../styles/elements';
@use '../styles/typography';
@use 'sass:math';

$blockDimension: 4em;
$roundLineHeight: 0.8em;

.round-tracker {
  width: 100%;
  transition: transform constants.$transition;
  transition-delay: 0.5s;
  font-size: typography.$fontSize5;

  &.hidden {
    transform: translateY(150%);
  }

  .round-line {
    margin: layout.$spaceSmall 0;
    display: flex;
    justify-content: space-between;
    background-color: transparent;
    height: $roundLineHeight;
    animation: grow 0.2s linear;
    width: 100%;
    transition: height constants.$growthTransition;

    &.revealed {
      .point-block {
        background-color: colors.$secondaryColor !important;
      }
    }

    .point-block {
      display: block;
      height: 100%;
      width: $blockDimension;
      border-radius: layout.$borderRadiusSmall;
      background-color: colors.$legendaryColor;

      &.point-value-1 {background-color: colors.$activeColor;}
      &.max-point {background-color: colors.$epicColor;}
      &.empty {background-color: colors.$shadow-25;}
      &.hidden {visibility: hidden;}
    }
  }

  .round-step-container {
    display: flex;
    align-items: center;
    justify-content: space-between;
  }

  .round-step {
    display: block;
    height: math.div($blockDimension, 1.6);
    width: $blockDimension;
    line-height: math.div($blockDimension, 1.6);
    text-align: center;
    border-radius: layout.$borderRadiusSmall;
    opacity: 1;
    background-color: colors.$shadow-25 ;
    position: relative;
    @include elements.shadow1(colors.$backgroundColor);

    // the color defaults are for points 2 -> n, and point value 1 is the override
    &:before {
      visibility: hidden;
      content: '+2';
      position: absolute;
      font-size: typography.$fontSize4;
      top: 0;
      left: 0;
      width: 100%;
      color: colors.$legendaryColor;
      opacity: 1;
      font-family: typography.$fontFamilyBold;
    }

    &.not-visible {
      opacity: 0;
    }

    &.is-tip {
      @include elements.shadow1(colors.$legendaryColor);
      transition: box-shadow constants.$transition;
    }

    &.revealed {
      transition: opacity constants.$transition;
      background-color: colors.$secondaryColor;
      color: colors.$nearBlack;
      @include elements.shadow1();
    }

    &.completed {
      background-color: colors.$legendaryColor;
      @include elements.shadow1();

      &:before {
        visibility: visible;
        top: -100%;
        transition: top constants.$transition;
        animation: disappear 0.5s constants.$transitionEasing forwards;
        animation-delay: 0.5s;
      }
    }

    &.point-value-1 {
      &:before {
        content: '+1';
        color: colors.$activeColor;
      }
      &.completed {
        background-color: colors.$activeColor;
      }
      &.is-tip {
        @include elements.shadow1(colors.$activeColor);
      }
    }

    &.max-point {
      &:before {
        color: colors.$epicColor;
      }
      &.completed {
        background-color: colors.$epicColor;
      }
      &.is-tip {
        @include elements.shadow1(colors.$epicColor);
      }
    }

    &.point-value-3 {
      &:before {
        content: '+3';
      }
    }

    &.point-value-4 {
      &:before {
        content: '+4';
      }
    }

    &.point-value-5 {
      &:before {
        content: '+5';
      }
    }

    &.point-value-6 {
      &:before {
        content: '+6';
      }
    }

    &.point-value-7 {
      &:before {
        content: '+7';
      }
    }
    &.point-value-8 {
      &:before {
        content: '+8';
      }
    }

    &.point-value-9 {
      &:before {
        content: '+9';
      }
    }
  }

  .point-block {


  }
}

@keyframes grow {
  from {
    height: 0;
  }
  to {
    height: $roundLineHeight;
  }
}
